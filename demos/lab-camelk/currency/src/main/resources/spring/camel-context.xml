<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- Helper classes  -->
  <bean id="helper" class="org.demo.Helper"/>


  <!-- Define a traditional camel context here -->
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

    <!-- REST configuration -->
    <restConfiguration
      apiContextPath="api-docs"
      component="servlet"
      contextPath="camel"
      enableCORS="true"
      port="{{camelrest.port}}"
      host="{{camelrest.host}}">
        <!-- Property to enable Streaming (Only works with Undertow) -->
        <endpointProperty key="disableStreamCache" value="true"/>
        <apiProperty key="cors" value="true"/>
        <apiProperty key="api.title" value="Currency REST APIs"/>
        <apiProperty key="api.version" value="1.0.0"/>
    </restConfiguration>


    <!-- Document API -->
    <rest path="/currency">

        <!-- test endpoint for 3Scale and OCP health probe -->
        <get produces="application/json" uri="/test">
            <description>Test service</description>
            <to uri="direct:test"/>
        </get>


        <get produces="application/json" uri="/gbp-eur">
            <description>GBP/EUR stream</description>
            <to uri="direct:gbp-eur"/>
        </get>
    </rest>


    <!-- route to probe Fuse from 3Scale and OpenShift -->
    <route id="test">
        <from uri="direct:test"/>
        <log message="test for 3Scale incoming: ${body}"/>
        <bean ref="helper" method="setAck"/>
        <log message=">>> ${body}"/>
    </route>


    <!-- Main route -->
    <route id="gbp-eur">
      <from uri="direct:gbp-eur"/>
      <log message="GBP/EUR request"/>
      <log message="Generating byte stream to send back."/>
      <!-- <bean ref="helper" method="prepareStream(${header.size})"/> -->
      <bean ref="helper" method="prepareStream"/>
    </route>


  </camelContext>

</beans>
